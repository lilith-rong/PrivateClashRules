# HTTP/Unix socket API 监听地址，Unix不验证，但是可以nginx反代
# external-controller: 127.0.0.1:9090
external-controller-unix: ./Web/mihomo.sock
# API访问密钥
secret: "j7CByGr9fTgZoRMzyNPAsQSq6CtjWacyGeMHqn2Vx9NRjn3EQdDUsSFhfQG84wgc"
# 外部用户界面
external-ui: ./Web/WebUI
# 自动下载
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip" #从 GitHub Pages 分支获取

# GEO 设置，mode默认为false(mmdb格式)，loader默认为memconservative(小内存)
# geodata-mode: true
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
geox-url:
  geoip: https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat
  geosite: https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat
  mmdb: https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip.metadb
  asn: https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb
  

# HTTP(S) 和 SOCKS4(A)/SOCKS5 代理服务共用一个端口
mixed-port: 7890
# HTTP(S) 代理服务端口
# port: 7890
# SOCKS5 代理服务端口
# socks-port: 7891
# Linux 和 macOS 的透明代理服务端口 (TCP 和 TProxy UDP 重定向)
# redir-port: 7892
# Linux 的透明代理服务端口 (TProxy TCP 和 TProxy UDP)
# tproxy-port: 7893
# 设置为 true 以允许来自其他 LAN IP 地址的连接
allow-lan: false
# 仅当 `allow-lan` 为 `true` 时有效
bind-address: '*'

# Clash 路由工作模式
mode: rule

# 是否解析IPv6地址
ipv6: true

# 是否让 Clash 去匹配进程，strict为自动
find-process-mode: strict

# 全局客户端指纹
global-client-fingerprint: random

###这里是自定义订阅链接，由于放置于公开仓库，故只存放对应样式###
#proxy-providers:
#  provider1:
#    type: http
#    url: "http://test.com"
#    path: ./proxy_providers/provider1.yaml
#    interval: 3600
#    proxy: DIRECT
#    size-limit: 0
#    header:
#      User-Agent:
#      - "Clash/v1.18.0"
#      - "mihomo/1.18.3"
#      Authorization:
#      - 'token 1231231'
#    health-check:
#      enable: true
#      url: https://www.gstatic.com/generate_204
#      interval: 300
#      timeout: 5000
#      lazy: true
#      expected-status: 204
#    override:
#      tfo: false
#      mptcp: false
#      udp: true
#      udp-over-tcp: false
#      down: "50 Mbps"
#      up: "10 Mbps"
#      skip-cert-verify: true
#      dialer-proxy: proxy
#      interface-name: tailscale0
#      routing-mark: 233
#      ip-version: ipv4-prefer
#      additional-prefix: "provider1 prefix |"
#      additional-suffix: "| provider1 suffix"
#      proxy-name:
#      - pattern: "IPLC-(.*?)倍"
#        target: "iplc x $1"
#    filter: "(?i)港|hk|hongkong|hong kong"
#    exclude-filter: "xxx"
#    exclude-type: "ss|http"
#    payload:
#      - name: "ss1"
#        type: ss
#        server: server
#        port: 443
#        cipher: chacha20-ietf-poly1305
#        password: "password"
###

dns:
  enable: true
  ipv6: true
  prefer-h3: true
  listen: 0.0.0.0:8553
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
      - 'dns.msftncsi.com'
      - 'www.msftncsi.com'
      - 'www.msftconnecttest.com'
  use-system-hosts: false
  default-nameserver:
    - https://1.1.1.1/dns-query
    - https://1.0.0.1/dns-query
    - https://9.9.9.9/dns-query
    - https://8.8.8.8/dns-query
    - https://101.101.101.101/dns-query
  nameserver:
    - https://dns.cloudflare.com/dns-query
    - https://dns.twnic.tw/dns-query
    - https://dns.google/dns-query
    - https://cloudflare-dns.com/dns-query
    - https://doh.opendns.com/dns-query
    - https://dns.quad9.net/dns-query
  proxy-server-nameserver:
    - https://dns.cloudflare.com/dns-query
    - https://dns.twnic.tw/dns-query
    - https://dns.google/dns-query
    - https://cloudflare-dns.com/dns-query
    - https://doh.opendns.com/dns-query
    - https://dns.quad9.net/dns-query
  direct-nameserver:
    - https://dns.alidns.com/dns-query
    - https://doh.pub/dns-query
    - https://doh.apad.pro/dns-query
    - 114.114.114.114
    - 168.95.1.1
    - 101.101.101.101
    - 202.175.3.8
  fallback:
    - https://dns.alidns.com/dns-query
    - https://doh.pub/dns-query
    - https://doh.apad.pro/dns-query
    - 114.114.114.114
    - 168.95.1.1
    - 101.101.101.101
    - 202.175.3.8
  fallback-filter:
    geoip: true
    geoip-code: CN
    
sniffer:
  enable: true
  override-destination: false
  sniff:
    HTTP:
      ports: [80,8080-8880,2052,2082,2086,2095]
      override-destination: true
    TLS:
      ports: [443,2053,2083,2087,2096,8443]
    QUIC:
      ports: [443,2053,2083,2087,2096,8443]
    
tun:
  enable: false
  stack: mixed
  device: Mihomo
  auto-route: true
  auto-detect-interface: true
  strict-route: false
  dns-hijack:
    - any:53


proxy-groups:
  - name: ♻️ 自动选择
    icon: https://testingcf.jsdelivr.net/gh/Orz-3/mini@master/Color/Urltest.png
    type: url-test
    interval: 300
    include-all: true
    exclude-filter: (?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置|(^(?i)(?:.*?([2-9]|1\d+|[1-9]\.\d+)(倍|[x✕✖⨉])|.*?([x✕✖⨉]|倍)([2-9]|1\d+|[1-9]\.\d+)|.*?倍率[:：]?\s*([1-9]\d*|\d+\.\d+)).*$)
  - name: 👆 手动选择
    icon: https://testingcf.jsdelivr.net/gh/shindgewongxj/WHATSINStash@master/icon/select.png
    type: select
    include-all: true
    exclude-filter: (?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置
  - name: 🚀 代理节点
    icon: https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Proxy.png
    type: select
    proxies:
      - ♻️ 自动选择
      - 👆 手动选择
      - DIRECT
  - name: 📶📞 VoWiFi
    type: select
    include-all: true
    proxies:
      - 🚀 代理节点
      - DIRECT
  - name: 🎯 直连节点
    icon: https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Direct.png
    type: select
    proxies:
      - DIRECT
      - 🚀 代理节点
      - ♻️ 自动选择
      - 👆 手动选择
  - name: 🛑 过滤黑名单
    icon: https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/AdBlack.png
    type: select
    proxies:
      - REJECT
      - DIRECT
      - 🚀 代理节点
      - ♻️ 自动选择
      - 👆 手动选择
  - name: 🚀 国外娱乐
    icon: https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Proxy.png
    type: select
    include-all: true
    proxies:
      - 🚀 代理节点
      - ♻️ 自动选择
      - 👆 手动选择
      - DIRECT
  - name: 🇭🇰 香港节点
    icon: https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Hong_Kong.png
    include-all: true
    filter: (?i)港|HK|hk|Hong Kong|HongKong|hongkong
    type: url-test
    interval: 300
    tolerance: 50
  - name: 🇯🇵 日本节点
    icon: https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Japan.png
    include-all: true
    filter: (?i)日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan
    type: url-test
    interval: 300
    tolerance: 50
  - name: 🇺🇸 美国节点
    icon: https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/United_States.png
    include-all: true
    filter: (?i)美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States
    type: url-test
    interval: 300
    tolerance: 50
  - name: 🇹🇼 台湾节点
    icon: https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Taiwan.png
    include-all: true
    filter: (?i)台|新北|彰化|TW|Taiwan
    type: url-test
    interval: 300
    tolerance: 50
  - name: 🇸🇬 狮城节点
    icon: https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Singapore.png
    include-all: true
    filter: (?i)新加坡|坡|狮城|SG|Singapore
    type: url-test
    interval: 300
    tolerance: 50
  - name: 🇰🇷 韩国节点
    icon: https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Korea.png
    include-all: true
    filter: (?i)KR|Korea|KOR|首尔|韩|韓
    type: url-test
    interval: 300
    tolerance: 50
  - name: 🐟 漏网之鱼
    icon: https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Final.png
    type: select
    include-all: true
    proxies:
      - DIRECT
      - 🚀 代理节点
      - ♻️ 自动选择
      - 👆 手动选择
  - name: GLOBAL
    icon: https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Global.png
    include-all: true
    type: select
    proxies:
      - DIRECT
      - 🚀 代理节点
      - ♻️ 自动选择
      - 👆 手动选择



rule-providers:
  PersonalDirect:
    url: https://raw.githubusercontent.com/lilith-rong/PrivateClashRules/main/rules/PrivateDirect.list
    path: ./ruleset/PersonalDirect.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  PersonalProxy:
    url: https://raw.githubusercontent.com/lilith-rong/PrivateClashRules/main/rules/PrivateProxy.list
    path: ./ruleset/PrivateProxy.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  VoWiFi:
    url: https://raw.githubusercontent.com/lilith-rong/PrivateClashRules/main/rules/WifiCalling.list
    path: ./ruleset/VoWiFi.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  LocalAreaNetwork:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/LocalAreaNetwork.list
    path: ./ruleset/LocalAreaNetwork.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  UnBan:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/UnBan.list
    path: ./ruleset/UnBan.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  BanAD:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/BanAD.list
    path: ./ruleset/BanAD.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  BanProgramAD:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/BanProgramAD.list
    path: ./ruleset/BanProgramAD.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Adblock4limbo:
    url: https://limbopro.com/Adblock4limbo.list
    path: ./ruleset/Adblock4limbo
    behavior: classical
    interval: 86400
    format: text
    type: http
  anti-ad-surge:
    url: https://cdn.jsdelivr.net/gh/privacy-protection-tools/anti-AD@master/anti-ad-surge.txt
    path: ./ruleset/anti-ad-surge
    behavior: classical
    interval: 86400
    format: text
    type: http
  ProxyMedia:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/ProxyMedia.list
    path: ./ruleset/ProxyMedia.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  ProxyGFWlist:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/ProxyGFWlist.list
    path: ./ruleset/ProxyGFWlist.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  ChinaDomain:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/ChinaDomain.list
    path: ./ruleset/ChinaDomain.list
    behavior: domain
    interval: 86400
    format: text
    type: http
  ChinaCompanyIp:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/ChinaCompanyIp.list
    path: ./ruleset/ChinaCompanyIp.list
    behavior: ipcidr
    interval: 86400
    format: text
    type: http
  Download:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Download.list
    path: ./ruleset/Download.list
    behavior: classical
    interval: 86400
    format: text
    type: http

rules:
  # 总得吧GEO用上的吧，在下面插入几个geo的规则
  # - GEOSITE,google,proxy
  # - GEOIP,CN,DIRECT
  - "RULE-SET,PersonalDirect,🎯 直连节点"
  - "RULE-SET,PersonalProxy,🚀 代理节点"
  - "RULE-SET,VoWiFi,📶📞 VoWiFi"
  - "RULE-SET,LocalAreaNetwork,🎯 直连节点"
  - "RULE-SET,UnBan,🎯 直连节点"
  - "GEOSITE,category-ads-all,🛑 过滤黑名单"
  - "GEOSITE,win-spy,🛑 过滤黑名单"
  - "RULE-SET,BanAD,🛑 过滤黑名单"
  - "RULE-SET,BanProgramAD,🛑 过滤黑名单"
  - "RULE-SET,Adblock4limbo,🛑 过滤黑名单"
  - "RULE-SET,anti-ad-surge,🛑 过滤黑名单"
  # - "GEOSITE,china-list,🎯 直连节点" #莫名其妙的，这一项不存在
  - "GEOSITE,cn,🎯 直连节点"
  - "GEOSITE,tld-cn,🎯 直连节点"
  - "GEOSITE,google-cn,🎯 直连节点"
  - "GEOSITE,apple-cn,🎯 直连节点"
  - "GEOSITE,category-games@cn,🎯 直连节点"
  - "RULE-SET,ProxyMedia,🚀 国外娱乐"
  - "GEOIP,telegram,🚀 代理节点"
  - "GEOSITE,gfw,🚀 代理节点"
  - "GEOSITE,geolocation-!cn,🚀 代理节点"
  - "RULE-SET,ProxyGFWlist,🚀 代理节点"
  - "RULE-SET,ChinaDomain,🎯 直连节点"
  - "RULE-SET,ChinaCompanyIp,🎯 直连节点"
  - "RULE-SET,Download,🎯 直连节点"
  - "MATCH,🐟 漏网之鱼"
